/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import assets.Warna;
import controller.Database;
import model.Mahasiswa;
import java.awt.HeadlessException;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author fauzanalfaraby
 */
public class FormAnggotaUKM extends javax.swing.JInternalFrame {
    
    private JFileChooser fileChooser;

    private boolean validateInput() {
        // Validate nim
        if (nimTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Masukkan NIM anggota ", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Validate nama
        if (namaTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Masukkan nama anggota", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Validate kelas
        if (kelasTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Kelas tidak boleh kosong", "Validation Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        // Validate alamat
        if (alamatTextArea.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Alamat tidak boleh kosong", "Validation Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Validate email
        if (emailTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Masukkan Email anggota", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Validate email
        String email = emailTextField.getText();
        String emailPattern = nimTextField.getText() + "@stis.ac.id";
        if (!email.equals(emailPattern)) {
            JOptionPane.showMessageDialog(this, "Email harus dalam format 'nim@stis.ac.id'", "Validation Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Validate no telephone
        if (tlpnTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Masukkan No.Telephone anggota", "Validation Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Validate tempat lahir
        if (tempatLahirTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tempat lahir tidak boleh kosong", "Validation Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private void clear_form() {
        nimTextField.setText("");
        namaTextField.setText("");
        kelasTextField.setText("");
        alamatTextArea.setText("");
        emailTextField.setText("");
        tlpnTextField.setText("");
        tempatLahirTextField.setText("");
    }

    private void show_data() {
        DefaultTableModel dtm = (DefaultTableModel) dataAnggotaTable.getModel();

        // refresh tabel
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        try {
            int no = 1;
            // isi tabel
            for (Mahasiswa mhs : Database.getInstance().getListMahasiswa()) {
                dtm.addRow(new Object[] { mhs.getNim(), mhs.getNama(), mhs.getKelas(), mhs.getAlamat(), mhs.getEmail(),
                        mhs.getTlpn(), mhs.getTempatLahir()});
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    /**
     * Creates new form FormAnggotaUKM
     */
    public FormAnggotaUKM() {
        initComponents();
        clear_form();
        show_data();
        // remove the title bar of a JInternalFrame in Java Swing
        ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).setNorthPane(null);
        setResizable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nimLabel = new javax.swing.JLabel();
        namaLabel = new javax.swing.JLabel();
        kelasLabel = new javax.swing.JLabel();
        alamatLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        tlpnLabel = new javax.swing.JLabel();
        tempatLahirLabel = new javax.swing.JLabel();
        nimTextField = new javax.swing.JTextField();
        namaTextField = new javax.swing.JTextField();
        kelasTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        alamatTextArea = new javax.swing.JTextArea();
        emailTextField = new javax.swing.JTextField();
        tlpnTextField = new javax.swing.JTextField();
        tempatLahirTextField = new javax.swing.JTextField();
        insertButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataAnggotaTable = new javax.swing.JTable();
        hapusButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(241, 241, 230));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel1.setText("              INSERT DATA MAHASISWA");

        nimLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nimLabel.setText("NIM");

        namaLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        namaLabel.setText("Nama");

        kelasLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        kelasLabel.setText("Kelas");

        alamatLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        alamatLabel.setText("Alamat");

        emailLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        emailLabel.setText("Email");

        tlpnLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tlpnLabel.setText("No.Telephone");

        tempatLahirLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tempatLahirLabel.setText("Tempat Lahir");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        alamatTextArea.setColumns(20);
        alamatTextArea.setRows(5);
        jScrollPane1.setViewportView(alamatTextArea);

        insertButton.setBackground(new java.awt.Color(204, 204, 204));
        insertButton.setText("Insert");
        insertButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        insertButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertButtonMouseExited(evt);
            }
        });
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(204, 204, 204));
        clearButton.setText("Clear");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearButtonMouseExited(evt);
            }
        });
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tempatLahirLabel)
                            .addComponent(tlpnLabel)
                            .addComponent(emailLabel)
                            .addComponent(alamatLabel)
                            .addComponent(kelasLabel)
                            .addComponent(namaLabel)
                            .addComponent(nimLabel))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tempatLahirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tlpnTextField)
                                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(kelasTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(namaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(clearButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insertButton)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nimLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kelasTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kelasLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tlpnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tlpnLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tempatLahirLabel)
                            .addComponent(tempatLahirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(alamatLabel))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton)
                    .addComponent(insertButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));

        jScrollPane2.setBackground(new java.awt.Color(241, 241, 230));

        dataAnggotaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NIM", "Nama", "Kelas", "Alamat", "Email", "No.Telephone", "Tempat Lahir"
            }
        ));
        dataAnggotaTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataAnggotaTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(dataAnggotaTable);

        hapusButton.setBackground(new java.awt.Color(204, 204, 204));
        hapusButton.setText("Hapus Data");
        hapusButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hapusButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hapusButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hapusButtonMouseExited(evt);
            }
        });
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(204, 204, 204));
        editButton.setText("Edit Data");
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editButtonMouseExited(evt);
            }
        });
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        exportButton.setBackground(new java.awt.Color(204, 204, 204));
        exportButton.setText("Export .csv");
        exportButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exportButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exportButtonMouseExited(evt);
            }
        });
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(hapusButton)
                        .addGap(38, 38, 38)
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exportButton)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hapusButton)
                    .addComponent(editButton)
                    .addComponent(exportButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
        if (validateInput()) {
            Mahasiswa mhs = new Mahasiswa();
            mhs.setNim(nimTextField.getText());
            mhs.setNama(namaTextField.getText());
            mhs.setKelas(kelasTextField.getText());
            mhs.setAlamat(alamatTextArea.getText());
            mhs.setEmail(emailTextField.getText());
            mhs.setTlpn(tlpnTextField.getText());
            mhs.setTempatLahir(tempatLahirTextField.getText());

            try {
                Database.getInstance().insertAnggotaUKM(mhs);
                JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan");
                clear_form();
                show_data();
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan data", "Gagal", +JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_insertButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clear_form();
        
    }//GEN-LAST:event_clearButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (fileChooser == null) {
            fileChooser = new JFileChooser(); // Pastikan fileChooser sudah diinisialisasi
        }

        int returnValue = fileChooser.showSaveDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            // Gunakan SwingWorker untuk menjalankan penulisan file di thread terpisah
            SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
                @Override
                protected Void doInBackground() throws Exception {
                    try (FileWriter writer = new FileWriter(fileToSave)) {
                        TableModel model = dataAnggotaTable.getModel();

                        // Menulis header
                        for (int i = 0; i < model.getColumnCount(); i++) {
                            writer.append(model.getColumnName(i));
                            if (i < model.getColumnCount() - 1) {
                                writer.append(",");
                            }
                        }
                        writer.append("\n");

                        // Menulis baris data
                        for (int row = 0; row < model.getRowCount(); row++) {
                            for (int col = 0; col < model.getColumnCount(); col++) {
                                Object value = model.getValueAt(row, col);
                                writer.append(value != null ? value.toString() : "");
                                if (col < model.getColumnCount() - 1) {
                                    writer.append(",");
                                }
                            }
                            writer.append("\n");
                        }
                    } catch (IOException e) {
                        throw new RuntimeException("Gagal mengekspor data ke CSV: " + e.getMessage(), e);
                    }
                    return null;
                }

                @Override
                protected void done() {
                    try {
                        get(); // Untuk menangani exception yang mungkin terjadi selama doInBackground
                        JOptionPane.showMessageDialog(null, "Data berhasil diekspor ke .csv");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            };

            worker.execute(); // Jalankan worker
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    private void clearButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseEntered
        // TODO add your handling code here:
        clearButton.setBackground(Warna.HOVERIN);
    }//GEN-LAST:event_clearButtonMouseEntered

    private void clearButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseExited
        // TODO add your handling code here:
        clearButton.setBackground(Warna.HOVEROUT);
    }//GEN-LAST:event_clearButtonMouseExited

    private void insertButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertButtonMouseEntered
        // TODO add your handling code here:
        insertButton.setBackground(Warna.HOVERIN);
    }//GEN-LAST:event_insertButtonMouseEntered

    private void insertButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertButtonMouseExited
        // TODO add your handling code here:
        insertButton.setBackground(Warna.HOVEROUT);
    }//GEN-LAST:event_insertButtonMouseExited

    private void hapusButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusButtonMouseEntered
        // TODO add your handling code here:
        hapusButton.setBackground(Warna.HOVERIN);
    }//GEN-LAST:event_hapusButtonMouseEntered

    private void hapusButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusButtonMouseExited
        // TODO add your handling code here:
        hapusButton.setBackground(Warna.HOVEROUT);
    }//GEN-LAST:event_hapusButtonMouseExited

    private void editButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseEntered
        // TODO add your handling code here:
        editButton.setBackground(Warna.HOVERIN);
    }//GEN-LAST:event_editButtonMouseEntered

    private void editButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseExited
        // TODO add your handling code here:
        editButton.setBackground(Warna.HOVEROUT);
    }//GEN-LAST:event_editButtonMouseExited

    private void exportButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportButtonMouseEntered
        // TODO add your handling code here:
        exportButton.setBackground(Warna.HOVERIN);
    }//GEN-LAST:event_exportButtonMouseEntered

    private void exportButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportButtonMouseExited
        // TODO add your handling code here:
        exportButton.setBackground(Warna.HOVEROUT);
    }//GEN-LAST:event_exportButtonMouseExited

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) dataAnggotaTable.getModel();
        Mahasiswa mhs = new Mahasiswa();
        mhs.setNim(nimTextField.getText());
        mhs.setNama(namaTextField.getText());
        mhs.setKelas(kelasTextField.getText());
        mhs.setAlamat(alamatTextArea.getText());
        mhs.setEmail(emailTextField.getText());
        mhs.setTlpn(tlpnTextField.getText());
        mhs.setTempatLahir(tempatLahirTextField.getText());
        
        String nim = nimTextField.getText();

        try {
            Database.getInstance().updateMahasiswa(mhs, nim);
            JOptionPane.showMessageDialog(this, "Data berhasil diupdate");
            show_data();
            clear_form();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }// GEN-LAST:event_editButtonActionPerformed

    private void dataAnggotaTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_dataAnggotaTableMouseClicked
        // TODO add your handling code here:
        int baris = dataAnggotaTable.rowAtPoint(evt.getPoint());
        String nim = dataAnggotaTable.getValueAt(baris, 0).toString();
        nimTextField.setText(nim);

        String nama = dataAnggotaTable.getValueAt(baris, 1).toString();
        namaTextField.setText(nama);

        String kelas = dataAnggotaTable.getValueAt(baris, 2).toString();
        kelasTextField.setText(kelas);

        String alamat = dataAnggotaTable.getValueAt(baris, 3).toString();
        alamatTextArea.setText(alamat);

        String email = dataAnggotaTable.getValueAt(baris, 4).toString();
        emailTextField.setText(email);

        String tlpn = dataAnggotaTable.getValueAt(baris, 5).toString();
        tlpnTextField.setText(tlpn);

        String tempat_lahir = dataAnggotaTable.getValueAt(baris, 6).toString();
        tempatLahirTextField.setText(tempat_lahir);

    }// GEN-LAST:event_dataAnggotaTableMouseClicked


    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_hapusButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) dataAnggotaTable.getModel();
        String nim = nimTextField.getText();
        try {
            Database.getInstance().deteleMahasiswa(nim);
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menghapus data " + JOptionPane.ERROR_MESSAGE);
        }
        clear_form();
        show_data();
    }// GEN-LAST:event_hapusButtonActionPerformed

    // GEN-LAST:event_insertButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alamatLabel;
    private javax.swing.JTextArea alamatTextArea;
    private javax.swing.JButton clearButton;
    private javax.swing.JTable dataAnggotaTable;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JButton exportButton;
    private javax.swing.JButton hapusButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel kelasLabel;
    private javax.swing.JTextField kelasTextField;
    private javax.swing.JLabel namaLabel;
    private javax.swing.JTextField namaTextField;
    private javax.swing.JLabel nimLabel;
    private javax.swing.JTextField nimTextField;
    private javax.swing.JLabel tempatLahirLabel;
    private javax.swing.JTextField tempatLahirTextField;
    private javax.swing.JLabel tlpnLabel;
    private javax.swing.JTextField tlpnTextField;
    // End of variables declaration//GEN-END:variables
}
